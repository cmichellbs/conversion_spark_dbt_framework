
   
  USE [papakura_20221223];
  if object_id ('"dbo_mig"."fat_leitura_intermediaria__dbt_tmp_temp_view"','V') is not null
      begin
      drop view "dbo_mig"."fat_leitura_intermediaria__dbt_tmp_temp_view"
      end


   
   
  USE [papakura_20221223];
  if object_id ('"dbo_mig"."fat_leitura_intermediaria__dbt_tmp"','U') is not null
      begin
      drop table "dbo_mig"."fat_leitura_intermediaria__dbt_tmp"
      end


   USE [papakura_20221223];
   EXEC('create view "dbo_mig"."fat_leitura_intermediaria__dbt_tmp_temp_view" as
    WITH reg as(select temp.*, CASE WHEN temp.GBIMCURR_TYPE IS NULL THEN ''AB'' ELSE temp.GBIMCURR_TYPE END  as GBIMCURR_TYPE_ADJ from "papakura_20221223"."dbo"."GBINVOICE#REGISTERS" temp) 

,base as(select GBIINVOICE as INVOICE from GBINVOICE#REGISTERS gr 
group by GBIINVOICE
having count(GBIINVOICE) > 1

UNION  

SELECT GBIINVOICE FROM  GBINVOICE#REGISTERS
WHERE GBIMCURR_TYPE =''IM'' or (GBIMPREV_TYPE =''RM'' AND GBIMCURR_TYPE =''RM'') OR GBIMCURR_TYPE =''RM'' OR ( GBIMPREV_TYPE =''IM'' AND VMC >1) OR  GBIMPREV_TYPE =''IM''
OR GBIMMETERNOCHANGE = ''RMV'')

,reg2 as (select *,
CASE 
	WHEN MAX(VMC) OVER(PARTITION BY GBIINVOICE) = 2 AND (VMC = 2 AND GBIMMETERNOCHANGE IS NULL) THEN LAG(GBIMCONSUMP,1,GBIMCONSUMP) OVER(PARTITION BY GBIINVOICE ORDER BY VMC)
	WHEN MAX(VMC) OVER(PARTITION BY GBIINVOICE) = 3 AND (VMC = 2 AND GBIMMETERNOCHANGE IS NULL) THEN LAG(GBIMCONSUMP,1,GBIMCONSUMP) OVER(PARTITION BY GBIINVOICE ORDER BY VMC)
	WHEN MAX(VMC) OVER(PARTITION BY GBIINVOICE) = 3 AND (VMC = 3 AND GBIMMETERNOCHANGE IS NULL) THEN LAG(GBIMCONSUMP,1,GBIMCONSUMP) OVER(PARTITION BY GBIINVOICE ORDER BY VMC)
	ELSE GBIMCONSUMP
END AS GBIMCONSUMP_ADJ




from base
INNER join reg on reg.GBIINVOICE = base.INVOICE


)


,leitura as (select 
row_number() over(partition by reg2.GBIBREGKEY order by reg2.GBIMCURR_DATE asc ) as NR_SEQUENCIAL,
reg2.GBIMCURR_READ as NR_LEITURA_REAL,
reg2.GBIMCURR_READ as NR_LIDO,
CASE WHEN DATEPART(HOUR,reg2.GBIMCURR_DATE) = 23 THEN  DATEADD(HOUR,1,reg2.GBIMCURR_DATE) 
	 WHEN DATEPART(HOUR,reg2.GBIMCURR_DATE) = 13 THEN  DATEADD(HOUR,11,reg2.GBIMCURR_DATE)

	 WHEN DATEPART(HOUR,reg2.GBIMCURR_DATE) = 12 THEN  DATEADD(HOUR,12,reg2.GBIMCURR_DATE)
	 WHEN DATEPART(HOUR,reg2.GBIMCURR_DATE) = 11 THEN  DATEADD(HOUR,13,reg2.GBIMCURR_DATE)
ELSE reg2.GBIMCURR_DATE END as DT_LEITURA_UNIDADE,
cast(concat(year(CASE WHEN DATEPART(HOUR,reg2.GBIMCURR_DATE) = 23 THEN  DATEADD(HOUR,1,reg2.GBIMCURR_DATE) 
	WHEN DATEPART(HOUR,reg2.GBIMCURR_DATE) = 12 THEN  DATEADD(HOUR,12,reg2.GBIMCURR_DATE)
	WHEN DATEPART(HOUR,reg2.GBIMCURR_DATE) = 13 THEN  DATEADD(HOUR,11,reg2.GBIMCURR_DATE)

	 WHEN DATEPART(HOUR,reg2.GBIMCURR_DATE) = 11 THEN  DATEADD(HOUR,13,reg2.GBIMCURR_DATE)
	 ELSE reg2.GBIMCURR_DATE END),concat(''-'',concat(month(CASE WHEN DATEPART(HOUR,reg2.GBIMCURR_DATE) = 23 THEN  DATEADD(HOUR,1,reg2.GBIMCURR_DATE) 
WHEN DATEPART(HOUR,reg2.GBIMCURR_DATE) = 12 THEN  DATEADD(HOUR,12,reg2.GBIMCURR_DATE)
WHEN DATEPART(HOUR,reg2.GBIMCURR_DATE) = 13 THEN  DATEADD(HOUR,11,reg2.GBIMCURR_DATE)

	 WHEN DATEPART(HOUR,reg2.GBIMCURR_DATE) = 11 THEN  DATEADD(HOUR,13,reg2.GBIMCURR_DATE)
	 ELSE reg2.GBIMCURR_DATE END),concat(''-'',01)))) as date) as DT_MES_REF_LEITURA,
CASE 
when reg2.GBIMCURR_TYPE_ADJ = ''AB'' then 6
when reg2.GBIMCURR_TYPE_ADJ = ''AE'' then 6
when reg2.GBIMCURR_TYPE_ADJ = ''BR'' then 6
when reg2.GBIMCURR_TYPE_ADJ = ''CR'' then 3
when reg2.GBIMCURR_TYPE_ADJ = ''E1'' then 6
when reg2.GBIMCURR_TYPE_ADJ = ''E2'' then 6
when reg2.GBIMCURR_TYPE_ADJ = ''E3'' then 6
when reg2.GBIMCURR_TYPE_ADJ = ''EM'' then 6
when reg2.GBIMCURR_TYPE_ADJ = ''GE'' then 6
when reg2.GBIMCURR_TYPE_ADJ = ''GR'' then 3
when reg2.GBIMCURR_TYPE_ADJ = ''IM'' then 3
when reg2.GBIMCURR_TYPE_ADJ = ''ME'' then 6
when reg2.GBIMCURR_TYPE_ADJ = ''MR'' then 3
when reg2.GBIMCURR_TYPE_ADJ = ''NM'' then 6
when reg2.GBIMCURR_TYPE_ADJ = ''OR'' then 3
when reg2.GBIMCURR_TYPE_ADJ = ''RD'' then 3
when reg2.GBIMCURR_TYPE_ADJ = ''RM'' then 3
ELSE 6
END as CH_TIPO_LEITURA,
cula.ID_UNIDADE_LIGACAO_AGUA,
hid.ID_HIDROMETRO,
reg2.GBIINVOICE as idseq,
reg2.GBIMCURR_TYPE_ADJ AS cod,
reg2.GBIMCONSUMP AS QT_SALDO_CONSUMO,
case  WHEN (reg2.GBIMCURR_TYPE = ''RM'' OR reg2.GBIMMETERNOCHANGE = ''RMV'') THEN ''N'' else ''S'' end as FL_ULTIMA_LEITURA_LIGACAO,

datediff(day,reg2.GBIMPREV_DATE,reg2.GBIMCURR_DATE) as NR_DIAS_ULTIMA_LEITURA,

CASE 	
	WHEN reg2.GBIMCURR_TYPE = ''RM'' OR reg2.GBIMMETERNOCHANGE = ''RMV'' THEN 2 ELSE 1
	
END AS CH_ORIGEM_LEITURA,
reg2.GBIMCONSUMP_ADJ as GBIMCONSUMP_ADJ

from reg2
INNER JOIN "papakura_20221223"."dbo_mig"."cad_unidade_ligacao_agua" cula on cula.CH_MATRICULA_UNIDADE  = reg2.GBIMINSTALL
inner join "papakura_20221223"."dbo_mig"."tab_tipo_leitura" tipo_leitura on tipo_leitura.CD_TIPO_LEITURA = reg2.GBIMCURR_TYPE_ADJ
inner join "papakura_20221223"."dbo_mig"."cad_hidrometro" hid on hid.NU_HIDROMETRO = reg2.GBIMSERIAL

where cula.ID_UNIDADE_LIGACAO_AGUA is not null )


,LEITURA_INTERMEDIARIA AS (
SELECT
-- row_number() over(order by DT_LEITURA_UNIDADE) as ID_LEITURA_INTERMEDIARIA,
l.NR_LEITURA_REAL as NR_LEITURA_REAL,
l.DT_LEITURA_UNIDADE as DT_LEITURA,
l.GBIMCONSUMP_ADJ as QT_SALDO_CONSUMO,
l.DT_LEITURA_UNIDADE as DT_GRAVACAO_LEITURA,
-- CASE WHEN ROW_NUMBER() OVER(PARTITION BY ID_UNIDADE_LIGACAO_AGUA ORDER BY idseq DESC) = 1 THEN ''S'' ELSE ''N'' 
-- END as FL_ULTIMA_LEITURA_LIGACAO,
null as FL_LEITURA_FORA_FAIXA,
l.QT_SALDO_CONSUMO as NR_LEITURA_REAL_LITRO,
l.QT_SALDO_CONSUMO as QT_SALDO_CONSUMO_LITRO,
null as NR_VAZAMENTO,
null as NR_FRAUDE,
flula.DT_MES_REF_LEITURA as DT_MES_REF_LEITURA,
l.NR_DIAS_ULTIMA_LEITURA as NR_DIAS_ULTIMA_LEITURA,
l.CH_ORIGEM_LEITURA as CH_ORIGEM_LEITURA,
l.ID_UNIDADE_LIGACAO_AGUA as ID_UNIDADE_LIGACAO_AGUA,
null as ID_UNIDADE_LIGACAO_PARTICULAR,
null as CH_TIPO_TROCA_HIDROMETRO,
l.QT_SALDO_CONSUMO as QT_CONSUMO_NORMAL,
null as QT_CONSUMO_DIFERENCIADO,
cast(1 as BIT) as FL_COBRAR_SALDO_CONSUMO,
l.idseq,
l.idseq as MIG_PK_TEMP,
''N'' MIG_ADJ_MODELO_TEMP
from leitura l
left join "papakura_20221223"."dbo_mig"."fat_leitura_unidade_ligacao_agua" flula on flula.MIG_PK_TEMP= l.idseq

union 

select

GBB$INSTALLREAD as NR_LEITURA_REAL,
cast(CASE WHEN DATEPART(HOUR,GBB$INSTALLDATE) = 23 THEN  DATEADD(HOUR,1,GBB$INSTALLDATE) 
     WHEN DATEPART(HOUR,GBB$INSTALLDATE) = 13 THEN  DATEADD(HOUR,11,GBB$INSTALLDATE)

     WHEN DATEPART(HOUR,GBB$INSTALLDATE) = 12 THEN  DATEADD(HOUR,12,GBB$INSTALLDATE)
     WHEN DATEPART(HOUR,GBB$INSTALLDATE) = 11 THEN  DATEADD(HOUR,13,GBB$INSTALLDATE)
ELSE GBB$INSTALLDATE END as date) as DT_LEITURA,
0 as QT_SALDO_CONSUMO,
cast(CASE WHEN DATEPART(HOUR,GBB$INSTALLDATE) = 23 THEN  DATEADD(HOUR,1,GBB$INSTALLDATE) 
     WHEN DATEPART(HOUR,GBB$INSTALLDATE) = 13 THEN  DATEADD(HOUR,11,GBB$INSTALLDATE)

     WHEN DATEPART(HOUR,GBB$INSTALLDATE) = 12 THEN  DATEADD(HOUR,12,GBB$INSTALLDATE)
     WHEN DATEPART(HOUR,GBB$INSTALLDATE) = 11 THEN  DATEADD(HOUR,13,GBB$INSTALLDATE)
ELSE GBB$INSTALLDATE END as date)as DT_GRAVACAO_LEITURA,
-- CASE WHEN ROW_NUMBER() OVER(PARTITION BY ID_UNIDADE_LIGACAO_AGUA ORDER BY idseq DESC) = 1 THEN ''S'' ELSE ''N'' 
-- END as FL_ULTIMA_LEITURA_LIGACAO,
null as FL_LEITURA_FORA_FAIXA,
0 as NR_LEITURA_REAL_LITRO,
0 as QT_SALDO_CONSUMO_LITRO,
null as NR_VAZAMENTO,
null as NR_FRAUDE,
cast(concat(year(CASE WHEN DATEPART(HOUR,GBB$INSTALLDATE) = 23 THEN  DATEADD(HOUR,1,GBB$INSTALLDATE) 
	WHEN DATEPART(HOUR,GBB$INSTALLDATE) = 12 THEN  DATEADD(HOUR,12,GBB$INSTALLDATE)
	WHEN DATEPART(HOUR,GBB$INSTALLDATE) = 13 THEN  DATEADD(HOUR,11,GBB$INSTALLDATE)

	 WHEN DATEPART(HOUR,GBB$INSTALLDATE) = 11 THEN  DATEADD(HOUR,13,GBB$INSTALLDATE)
	 ELSE GBB$INSTALLDATE END),concat(''-'',concat(month(CASE WHEN DATEPART(HOUR,GBB$INSTALLDATE) = 23 THEN  DATEADD(HOUR,1,GBB$INSTALLDATE) 
WHEN DATEPART(HOUR,GBB$INSTALLDATE) = 12 THEN  DATEADD(HOUR,12,GBB$INSTALLDATE)
WHEN DATEPART(HOUR,GBB$INSTALLDATE) = 13 THEN  DATEADD(HOUR,11,GBB$INSTALLDATE)

	 WHEN DATEPART(HOUR,GBB$INSTALLDATE) = 11 THEN  DATEADD(HOUR,13,GBB$INSTALLDATE)
	 ELSE GBB$INSTALLDATE END),concat(''-'',01)))) as date)  as DT_MES_REF_LEITURA,
0 as NR_DIAS_ULTIMA_LEITURA,
1 as CH_ORIGEM_LEITURA,
cula.ID_UNIDADE_LIGACAO_AGUA as ID_UNIDADE_LIGACAO_AGUA,
null as ID_UNIDADE_LIGACAO_PARTICULAR,
null as CH_TIPO_TROCA_HIDROMETRO,
0 as QT_CONSUMO_NORMAL,
null as QT_CONSUMO_DIFERENCIADO,
cast(1 as BIT) as FL_COBRAR_SALDO_CONSUMO,
ROW_NUMBER() OVER(ORDER BY GR.GBB$INSTALL) AS idseq,
ROW_NUMBER() OVER(ORDER BY GR.GBB$INSTALL) AS MIG_IDSEQ_TEMP,
''S'' MIG_ADJ_MODELO_TEMP

from "papakura_20221223"."dbo"."GBBILLREG" GR 
INNER JOIN "papakura_20221223"."dbo_mig"."cad_unidade_ligacao_agua" cula on cula.CH_MATRICULA_UNIDADE  = GR.GBB$INSTALL

where GBB$INSTALL NOT in(SELECT GBIINSTALL FROM GBINVOICE) AND GBB$ADJUSTTYPE IS NULL)

SELECT row_number() over(order by DT_LEITURA) as ID_LEITURA_INTERMEDIARIA,*,
CASE WHEN ROW_NUMBER() OVER(PARTITION BY ID_UNIDADE_LIGACAO_AGUA ORDER BY idseq DESC) = 1 THEN ''S'' ELSE ''N'' 
END as FL_ULTIMA_LEITURA_LIGACAO FROM LEITURA_INTERMEDIARIA
    ');

   SELECT * INTO "papakura_20221223"."dbo_mig"."fat_leitura_intermediaria__dbt_tmp" FROM
    "papakura_20221223"."dbo_mig"."fat_leitura_intermediaria__dbt_tmp_temp_view"

   
   
  USE [papakura_20221223];
  if object_id ('"dbo_mig"."fat_leitura_intermediaria__dbt_tmp_temp_view"','V') is not null
      begin
      drop view "dbo_mig"."fat_leitura_intermediaria__dbt_tmp_temp_view"
      end


   use [papakura_20221223];
  if EXISTS (
        SELECT * FROM
        sys.indexes WHERE name = 'dbo_mig_fat_leitura_intermediaria__dbt_tmp_cci'
        AND object_id=object_id('dbo_mig_fat_leitura_intermediaria__dbt_tmp')
    )
  DROP index "dbo_mig"."fat_leitura_intermediaria__dbt_tmp".dbo_mig_fat_leitura_intermediaria__dbt_tmp_cci
  CREATE CLUSTERED COLUMNSTORE INDEX dbo_mig_fat_leitura_intermediaria__dbt_tmp_cci
    ON "dbo_mig"."fat_leitura_intermediaria__dbt_tmp"

   

